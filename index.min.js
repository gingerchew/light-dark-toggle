let c=new Set,t=localStorage,s=()=>t.ldt??matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light",r=document,n=(e=>(e??=r.head.insertAdjacentElement("beforeend",Object.assign(r.createElement("meta"),{name:"color-scheme",content:s()})),e.content!==t.ldt&&(e.content=t.ldt),e))(r.querySelector('[name="color-scheme"]')),o=()=>requestAnimationFrame(()=>c.forEach(e=>e.e())),a=!1;class i extends HTMLElement{constructor(){super(),a||=this.getAttribute("reflect")==="local"}static define(l="light-dark-toggle"){window.customElements.define(l,this)}e(){this.innerHTML=`<button>${n.content}</button>`}t=()=>{n.content=n.content==="dark"?"light":"dark",a&&(t.ldt=n.content),o()};connectedCallback(){this.addEventListener("click",this.t,!0),c.add(this),this.e()}disconnectedCallback(){this.removeEventListener("click",this.t,!0),c.delete(this)}}export{i as LightDarkToggle};
//# sourceMappingURL=index.min.js.map
