let t=new Set,l=()=>localStorage["ldt:prefers"]??matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light",n=document,e=n.querySelector('[name="color-scheme"]')??n.head.insertAdjacentElement("beforeend",Object.assign(n.createElement("meta"),{name:"color-scheme",content:l()})),s=()=>requestAnimationFrame(()=>t.forEach(r=>r.e())),c=!1;class o extends HTMLElement{constructor(){super(),c||=this.getAttribute("reflect")==="local"}static define(a="light-dark-toggle"){window.customElements.define(a,this)}e(){this.innerHTML=`<button>${e.content}</button>`}t=()=>{e.content=e.content==="dark"?"light":"dark",c&&(localStorage["ldt:prefers"]=e.content),s()};connectedCallback(){this.addEventListener("click",this.t,!0),t.add(this),this.e()}disconnectedCallback(){this.removeEventListener("click",this.t,!0),t.delete(this)}}export{o as LightDarkToggle};
//# sourceMappingURL=index.min.js.map
