{
  "version": 3,
  "sources": ["index.ts"],
  "sourcesContent": ["let instances = new Set<LightDarkToggle>(),\n    d = document,\n    meta = d.querySelector<HTMLMetaElement>('[name=\"color-scheme\"]') ?? \n    d.head.insertAdjacentElement(\n        'beforeend', \n        Object.assign(d.createElement('meta'), { name: 'color-scheme', content: matchMedia('(prefers-color-scheme: dark)') ? 'dark' : 'light' }\n    )\n) as HTMLMetaElement,\n    render = () => requestAnimationFrame(() => instances.forEach(i => i._render()));\n\nexport class LightDarkToggle extends HTMLElement {\n    constructor() {super();}\n\n    static define(name = 'light-dark-toggle') {\n        window.customElements.define(name, this);\n    }\n\n    _render() {\n\t\tthis.innerHTML = `<button>${meta.content}</button>`\n    }\n\t_toggle = () => {\n        meta.content = meta.content === 'dark' ? 'light' : 'dark';\n\t\t\n        render();\n    }\n\n    connectedCallback() {\n        this.addEventListener('click', this._toggle, true);\n        instances.add(this);\n\t\tthis._render();\n    }\n\n    disconnectedCallback() {\n\t\tthis.removeEventListener('click', this._toggle, true);\n\t\tinstances.delete(this);\n    }\n}"],
  "mappings": "AAAA,IAAIA,EAAY,IAAI,IAChBC,EAAI,SACJC,EAAOD,EAAE,cAA+B,uBAAuB,GAC/DA,EAAE,KAAK,sBACH,YACA,OAAO,OAAOA,EAAE,cAAc,MAAM,EAAG,CAAE,KAAM,eAAgB,QAAS,WAAW,8BAA8B,EAAI,OAAS,OAAQ,CAC1I,CACJ,EACIE,EAAS,IAAM,sBAAsB,IAAMH,EAAU,QAAQI,GAAKA,EAAEC,EAAQ,CAAC,CAAC,EAE3E,MAAMC,UAAwB,WAAY,CAC7C,aAAc,CAAC,MAAM,CAAE,CAEvB,OAAO,OAAOC,EAAO,oBAAqB,CACtC,OAAO,eAAe,OAAOA,EAAM,IAAI,CAC3C,CAEAF,GAAU,CACZ,KAAK,UAAY,WAAWH,EAAK,OAAO,WACtC,CACHM,EAAU,IAAM,CACTN,EAAK,QAAUA,EAAK,UAAY,OAAS,QAAU,OAEnDC,EAAO,CACX,EAEA,mBAAoB,CAChB,KAAK,iBAAiB,QAAS,KAAKK,EAAS,EAAI,EACjDR,EAAU,IAAI,IAAI,EACxB,KAAKK,EAAQ,CACX,CAEA,sBAAuB,CACzB,KAAK,oBAAoB,QAAS,KAAKG,EAAS,EAAI,EACpDR,EAAU,OAAO,IAAI,CACnB,CACJ",
  "names": ["instances", "d", "meta", "render", "i", "_render", "LightDarkToggle", "name", "_toggle"]
}
